[Server Options]
    #The port to listen to; <unsigned integer>
    server_port=9000

    #The number of threads to handle the text processing requests
    num_threads=20

    #The folder for storing the input and output text files
    work_dir=./proc_text

    #Stores the pre-processor script call template
    #The <WORK_DIR> is the place holder for the work directory where the files are stored
    #The <JOB_UID> is the place holder for the unique processor job identifier.
    #The <LANGUAGE> is the place holder for the source language
    #The input source text file has a name:
    #    <JOB_UID>.pre.in.txt
    #The output source text file shall get a name:
    #    <JOB_UID>.pre.out.txt
    #Note that: After the server pre-processing job is finished these files are deleted. 
    #           If need to be kept the pre-processing script must do a back-up itself.
    pre_call_templ=../script/text/pre_process.sh <WORK_DIR> <JOB_UID> <LANGUAGE>
    
    #Stores the post-processor script call template
    #The <WORK_DIR> is the place holder for the work directory where the files are stored
    #The <JOB_UID> is the place holder for the unique processor job identifier.
    #The <LANGUAGE> is the place holder for the source language
    #The input target text file has a name:
    #    <JOB_UID>.post.in.txt
    #The output target text file shall get a name:
    #    <JOB_UID>.post.out.txt
    #Especially if executed through another instance of the processor server running on a
    #different node, the post-processing script must not expect the availability of the
    #pre-processor job files such as:
    #    <JOB_UID>.pre.in.txt
    #    <JOB_UID>.pre.out.txt
    #If these or other intermediate files from the pre-procesor job are needed this is to
    #be taken care of by the pre-processor script itself.
    post_call_templ=../script/text/post_process.sh <WORK_DIR> <JOB_UID> <LANGUAGE>
