INFO:	    Resident set size is how much memory this process currently has in main memory (RAM)
DEBUG 	<inc/Executor.hpp::execute(...):250>:	Getting the memory statistics before closing the Model file ...
DEBUG 	<src/StatisticsMonitor.cpp::getMemoryStatistics(...):62>:	Unable to obtain memory usage statistics on Mac OS yet!
DEBUG 	<inc/Executor.hpp::execute(...):252>:	Closing the model file ...
DEBUG 	<inc/Executor.hpp::execute(...):254>:	Getting the memory statistics after closing the Model file ...
DEBUG 	<src/StatisticsMonitor.cpp::getMemoryStatistics(...):62>:	Unable to obtain memory usage statistics on Mac OS yet!
USAGE:	Start reading and executing the test queries ...
DEBUG 	<inc/Executor.hpp::read_and_execute_queries(...):204>:	Got query line [ but the will to achieve ]
DEBUG 	<inc/MGramQuery.hpp::execute(...):155>:	Starting to execute:[ but the will to achieve ]
DEBUG1 	<inc/QueryMGram.hpp::prepare_for_querying(...):84>:	Preparing for the CUMULATIVE query execution!
DEBUG1 	<inc/QueryMGram.hpp::prepare_for_querying(...):90>:	Start retrieving the word ids: forward
DEBUG1 	<inc/QueryMGram.hpp::prepare_for_querying(...):120>:	Done preparing for the query execution!
DEBUG 	<inc/MGramQuery.hpp::execute(...):170>:	-----> Considering cumulative sub-m-gram [0, 0]
DEBUG 	<src/LayeredTrieDriver.cpp::get_payload(...):154>:	Retrieving payload for a sub-1-gram [0, 0]
DEBUG1 	<inc/MGramQuery.hpp::add_prob_get_back_off(...):440>:	Adding the probability from [0, 0] = -2.74634
DEBUG 	<inc/MGramQuery.hpp::execute(...):170>:	-----> Considering cumulative sub-m-gram [0, 1]
DEBUG1 	<inc/QueryMGram.hpp::get_hash(...):151>:	Getting hash values for begin/end index: 0/1, the previous computed begin level is: 0
DEBUG1 	<inc/QueryMGram.hpp::get_hash(...):168>:	hash[1] = 2
DEBUG1 	<inc/QueryMGram.hpp::get_hash(...):178>:	word[0] = 47, hash[0] = 3440850387
DEBUG1 	<inc/QueryMGram.hpp::get_hash(...):187>:	compute_hash_level[1] = 0
DEBUG1 	<inc/QueryMGram.hpp::get_hash(...):200>:	Resulting hash value: 3440850387
DEBUG 	<src/LayeredTrieDriver.cpp::get_payload(...):154>:	Retrieving payload for a sub-2-gram [0, 1]
DEBUG1:	Computing id of the m-gram context
DEBUG1:	m_word_ids[0]: 47
DEBUG1:	Resulting m-gram context id: 47
DEBUG 	<src/LayeredTrieDriver.cpp::get_payload(...):164>:	Got query context id: 47
DEBUG1 	<inc/MGramQuery.hpp::add_prob_get_back_off(...):440>:	Adding the probability from [0, 1] = -1.01153
DEBUG 	<inc/MGramQuery.hpp::execute(...):170>:	-----> Considering cumulative sub-m-gram [0, 2]
DEBUG1 	<inc/QueryMGram.hpp::get_hash(...):151>:	Getting hash values for begin/end index: 0/2, the previous computed begin level is: 0
DEBUG1 	<inc/QueryMGram.hpp::get_hash(...):168>:	hash[2] = 35
DEBUG1 	<inc/QueryMGram.hpp::get_hash(...):178>:	word[1] = 2, hash[1] = 754629497
DEBUG1 	<inc/QueryMGram.hpp::get_hash(...):178>:	word[0] = 47, hash[0] = 3703301980
DEBUG1 	<inc/QueryMGram.hpp::get_hash(...):187>:	compute_hash_level[2] = 0
DEBUG1 	<inc/QueryMGram.hpp::get_hash(...):200>:	Resulting hash value: 3703301980
DEBUG1 	<inc/MGramQuery.hpp::add_prob_get_back_off(...):448>:	Adding the probability from [0, 2] = ZERO
DEBUG1 	<inc/MGramQuery.hpp::do_back_off_undefined(...):325>:	The sub-m-gram [0, 2] was not found, need to back off!
DEBUG1 	<inc/MGramQuery.hpp::do_back_off_undefined(...):344>:	Adding the back-off data from [0, 1] = -0.031265
DEBUG1 	<inc/MGramQuery.hpp::do_back_off_undefined(...):355>:	Continue by going down the column, retrieve payload for [1, 2]
DEBUG1 	<inc/QueryMGram.hpp::get_hash(...):151>:	Getting hash values for begin/end index: 1/2, the previous computed begin level is: 0
DEBUG1 	<inc/QueryMGram.hpp::get_hash(...):168>:	hash[2] = 35
DEBUG1 	<inc/QueryMGram.hpp::get_hash(...):178>:	word[1] = 2, hash[1] = 754629497
DEBUG1 	<inc/QueryMGram.hpp::get_hash(...):187>:	compute_hash_level[2] = 1
DEBUG1 	<inc/QueryMGram.hpp::get_hash(...):200>:	Resulting hash value: 754629497
DEBUG 	<src/LayeredTrieDriver.cpp::get_payload(...):154>:	Retrieving payload for a sub-2-gram [1, 2]
DEBUG1:	Computing id of the m-gram context
DEBUG1:	m_word_ids[0]: 2
DEBUG1:	Resulting m-gram context id: 2
DEBUG 	<src/LayeredTrieDriver.cpp::get_payload(...):164>:	Got query context id: 2
DEBUG1 	<inc/MGramQuery.hpp::add_prob_get_back_off(...):440>:	Adding the probability from [1, 2] = -2.69971
DEBUG 	<inc/MGramQuery.hpp::execute(...):170>:	-----> Considering cumulative sub-m-gram [1, 3]
DEBUG1 	<inc/QueryMGram.hpp::get_hash(...):151>:	Getting hash values for begin/end index: 1/3, the previous computed begin level is: 0
DEBUG1 	<inc/QueryMGram.hpp::get_hash(...):168>:	hash[3] = 4
DEBUG1 	<inc/QueryMGram.hpp::get_hash(...):178>:	word[2] = 35, hash[2] = 2637247189
DEBUG1 	<inc/QueryMGram.hpp::get_hash(...):178>:	word[1] = 2, hash[1] = 3225345663
DEBUG1 	<inc/QueryMGram.hpp::get_hash(...):187>:	compute_hash_level[3] = 1
DEBUG1 	<inc/QueryMGram.hpp::get_hash(...):200>:	Resulting hash value: 3225345663
DEBUG 	<src/LayeredTrieDriver.cpp::get_payload(...):154>:	Retrieving payload for a sub-3-gram [1, 3]
DEBUG1:	Computing id of the m-gram context
DEBUG1:	m_word_ids[0]: 2
DEBUG1:	Start searching ctx_id for m_word_ids[1]: 35 prevCtxId: 2
DEBUG1:	get_context_id(35, prevCtxId) = 4601
DEBUG1:	Resulting m-gram context id: 4601
DEBUG 	<src/LayeredTrieDriver.cpp::get_payload(...):164>:	Got query context id: 4601
DEBUG1 	<inc/MGramQuery.hpp::add_prob_get_back_off(...):440>:	Adding the probability from [1, 3] = -1.06843
DEBUG 	<inc/MGramQuery.hpp::execute(...):170>:	-----> Considering cumulative sub-m-gram [1, 4]
DEBUG1 	<inc/MGramQuery.hpp::do_back_off_unknown(...):381>:	The last word (index: 4) is unknown, going down from the word index: 1 retrieving the back-off!
DEBUG1 	<inc/MGramQuery.hpp::do_back_off_unknown(...):385>:	Adding the back-off data from [1, 3] = -0.0148247
DEBUG1 	<inc/QueryMGram.hpp::get_hash(...):151>:	Getting hash values for begin/end index: 2/3, the previous computed begin level is: 1
DEBUG1 	<inc/QueryMGram.hpp::get_hash(...):200>:	Resulting hash value: 2637247189
DEBUG 	<src/LayeredTrieDriver.cpp::get_payload(...):154>:	Retrieving payload for a sub-2-gram [2, 3]
DEBUG1:	Computing id of the m-gram context
DEBUG1:	m_word_ids[0]: 35
DEBUG1:	Resulting m-gram context id: 35
DEBUG 	<src/LayeredTrieDriver.cpp::get_payload(...):164>:	Got query context id: 35
DEBUG1 	<inc/MGramQuery.hpp::add_back_off(...):475>:	Adding the back-off from [2, 3] = -0.0312649
DEBUG 	<src/LayeredTrieDriver.cpp::get_payload(...):154>:	Retrieving payload for a sub-1-gram [3, 3]
DEBUG1 	<inc/MGramQuery.hpp::add_back_off(...):475>:	Adding the back-off from [3, 3] = -0.229725
DEBUG1 	<inc/MGramQuery.hpp::do_last_word_unknown(...):304>:	The last word (index: 4) is unknonwn, using the <unk> word data!
DEBUG1 	<inc/MGramQuery.hpp::do_last_word_unknown(...):310>:	Adding the <unk> word probability data for [4, 4] = -100
RESULT:	  log_10( Prob( but ) ) = -2.74634
INFO:	  Prob( but ) = 0.00179333
RESULT:	---
RESULT:	  log_10( Prob( the | but ) ) = -1.01153
INFO:	  Prob( the | but ) = 0.0973812
RESULT:	---
RESULT:	  log_10( Prob( will | but the ) ) = -2.73098
INFO:	  Prob( will | but the ) = 0.0018579
RESULT:	---
RESULT:	  log_10( Prob( to | but the will ) ) = -1.06843
INFO:	  Prob( to | but the will ) = 0.0854213
RESULT:	---
RESULT:	  log_10( Prob( achieve | but the will to ) ) = -100.276
INFO:	  Prob( achieve | but the will to ) = 0
RESULT:	---
RESULT:	  log_10( Prob( but the will to achieve ) ) = -7.55728
INFO:	  Prob( but the will to achieve ) = 2.77156e-08
RESULT:	-------------------------------------------
USAGE:	Total query execution time is 0.000638 CPU seconds.
USAGE:	Cleaning up memory ...
INFO:	Done
