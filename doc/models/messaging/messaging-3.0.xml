<diagram program="umletino" version="14.2"><zoom_level>10</zoom_level><element><id>UMLClass</id><coordinates><x>560</x><y>1250</y><w>370</w><h>180</h></coordinates><panel_attributes>msg_base
--
//Stores the version of the message protocol
+PROTOCOL_VERSION : static constexpr uint32_t = 1
//Stores the protocol version attribute name
+PROT_VER_FIELD_NAME : static const char * = "prot_ver"
//Stores the message type attribute name
+MSG_TYPE_FIELD_NAME : static const char * = "msg_type"
--
msg_base()
/+~msg_base {virtual}/
--
Responsibilities
-- Is a base class for all messages
-- Stores the all-messages field names</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1100</x><y>50</y><w>370</w><h>130</h></coordinates><panel_attributes>response_msg
--
//Stores the status code attribute name
+STAT_CODE_FIELD_NAME : static const char * = "stat_code"
//Stores the status message attribute name
+STAT_MSG_FIELD_NAME : static const char * = "stat_msg"
--
response_msg()
/+~response_msg {virtual}/
--
Responsibilities
-- The base class for response messages</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>280</x><y>50</y><w>340</w><h>100</h></coordinates><panel_attributes>request_msg
--
--
request_msg()
/+~request_msg {virtual}/
--
Responsibilities
-- The base class for request messages</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>590</x><y>1080</y><w>140</w><h>190</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;public&gt;&gt;</panel_attributes><additional_attributes>120;170;120;100;10;100;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>450</x><y>590</y><w>340</w><h>190</h></coordinates><panel_attributes>trans_job_req_in
--
- m_inc_msg : incoming_msg *;
--
+trans_job_req_out( msg_ptr : incoming_msg *)
+get_job_id() : job_id_type {const}
+get_source_lang() : string {const}
+get_target_lang() : string {const}
+get_source_text() : const Value &amp; {const}
+is_trans_info() : bool {const}
--
Responsibilities
-- The incoming translation job request</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>110</x><y>410</y><w>290</w><h>160</h></coordinates><panel_attributes>supp_lang_req_out
--
--
+supp_lang_req_out()
/+~supp_lang_req_out() {virtual}/
--
Responsibilities
-- The outgoing supported languages request</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>40</x><y>320</y><w>70</w><h>300</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;public&gt;&gt;</panel_attributes><additional_attributes>10;10;10;280</additional_attributes></element><element><id>Relation</id><coordinates><x>350</x><y>320</y><w>70</w><h>110</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;public&gt;&gt;</panel_attributes><additional_attributes>10;10;10;90</additional_attributes></element><element><id>UMLClass</id><coordinates><x>30</x><y>600</y><w>320</w><h>120</h></coordinates><panel_attributes>supp_lang_req_in
--
- inc_msg : incoming_msg *;
--
+supp_lang_req_in( msg_ptr : incoming_msg *)
/+~supp_lang_req_in() {virtual}/
--
Responsibilities
-- The incoming supported languages request</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>540</x><y>400</y><w>300</w><h>170</h></coordinates><panel_attributes>trans_job_req_out
--
-m_job_id : job_id_type
--
+trans_job_req_out(job_id : const job_id_type,
                               source_lang : const string &amp;,
                               source_text : vector&lt;string&gt; &amp;,
                               target_lang : const string &amp;,
                               is_trans_info : const bool)
+get_job_id() : job_id_type {const}
--
Responsibilities
-- The outgoing translation job request</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>890</x><y>240</y><w>370</w><h>130</h></coordinates><panel_attributes>supp_lang_resp
--
+LANGUAGES_FIELD_NAME : static const char * = "langs"
--
+supp_lang_resp()
/+~supp_lang_resp() {virtual}/
--
Responsibilities
-- The base class for supported languages response</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>350</x><y>140</y><w>70</w><h>70</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;public&gt;&gt;</panel_attributes><additional_attributes>10;10;10;50</additional_attributes></element><element><id>UMLClass</id><coordinates><x>450</x><y>190</y><w>430</w><h>180</h></coordinates><panel_attributes>trans_job_req
--
+JOB_ID_FIELD_NAME : static const char * = "job_id"
+SOURCE_LANG_FIELD_NAME : static const char * = "source_lang"
+TARGET_LANG_FIELD_NAME : static const char * = "target_lang"
+IS_TRANS_INFO_FIELD_NAME : static const char * = "is_trans_info"
+SOURCE_SENTENCES_FIELD_NAME : static const char * = "source_sent"
--
+trans_job_req()
/+~trans_job_req() {virtual}/
--
Responsibilities
-- The base class for translation job request</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>460</x><y>360</y><w>70</w><h>250</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;public&gt;&gt;</panel_attributes><additional_attributes>10;10;10;230</additional_attributes></element><element><id>Relation</id><coordinates><x>780</x><y>360</y><w>70</w><h>60</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;public&gt;&gt;</panel_attributes><additional_attributes>10;10;10;40</additional_attributes></element><element><id>Relation</id><coordinates><x>500</x><y>140</y><w>70</w><h>70</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;public&gt;&gt;</panel_attributes><additional_attributes>10;10;10;50</additional_attributes></element><element><id>UMLClass</id><coordinates><x>20</x><y>190</y><w>380</w><h>140</h></coordinates><panel_attributes>supp_lang_req
--
--
+supp_lang_req()
/+~supp_lang_req() {virtual}/
--
Responsibilities
-- The base class for supported languages request</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1290</x><y>240</y><w>370</w><h>130</h></coordinates><panel_attributes>trans_job_resp
--
+JOB_ID_FIELD_NAME : static const char * = "job_id"
+TARGET_DATA_FIELD_NAME : static const char * = "target_data"
--
+trans_job_resp()
/+~trans_job_resp() {virtual}/
--
Responsibilities
-- The base class for translation job response</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1200</x><y>170</y><w>70</w><h>90</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;public&gt;&gt;</panel_attributes><additional_attributes>10;10;10;70</additional_attributes></element><element><id>Relation</id><coordinates><x>1380</x><y>170</y><w>70</w><h>90</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;public&gt;&gt;</panel_attributes><additional_attributes>10;10;10;70</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1320</x><y>690</y><w>330</w><h>240</h></coordinates><panel_attributes>trans_job_resp_in
--
-m_inc_msg : incoming_msg *
-m_sent_data : trans_sent_data_in
-m_trans_sent_iter : Value::ConstValueIterator
-m_trans_sent_end_iter : Value::ConstValueIterator
--
+trans_job_resp_in( inc_msg : incoming_msg *)
/+~trans_job_resp_in( ) {virtual}/
+next_sent_data() : const trans_sent_data_in *
+get_job_id() : job_id_type {const}
+get_status_code() : status_code
+get_status_msg() : string
--
Responsibilities
-- The incoming translation job response</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>970</x><y>400</y><w>300</w><h>170</h></coordinates><panel_attributes>supp_lang_resp_out
--
--
+supp_lang_resp_out()
/+~supp_lang_resp_out() {virtual}/
+start_supp_lang_obj() : void
+end_supp_lang_obj() : void
+start_source_lang_arr(source : const string&amp;) : void
+add_target_lang(target : const string&amp;) : void
+end_source_lang_arr() : void
--
Responsibilities
-- The outgoing supported languages response</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>890</x><y>590</y><w>330</w><h>150</h></coordinates><panel_attributes>supp_lang_resp_in
--
- m_inc_msg : incoming_msg *;
--
+supp_lang_resp_in(inc_msg : incoming_msg *)
/+~supp_lang_resp_in() {virtual}/
+get_languages() : const Value &amp; {const}
--
Responsibilities
-- The incoming supported languages response</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>900</x><y>360</y><w>70</w><h>250</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;public&gt;&gt;</panel_attributes><additional_attributes>10;10;10;230</additional_attributes></element><element><id>Relation</id><coordinates><x>1210</x><y>360</y><w>70</w><h>60</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;public&gt;&gt;</panel_attributes><additional_attributes>10;10;10;40</additional_attributes></element><element><id>Relation</id><coordinates><x>1330</x><y>360</y><w>70</w><h>350</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;public&gt;&gt;</panel_attributes><additional_attributes>10;10;10;330</additional_attributes></element><element><id>Relation</id><coordinates><x>1610</x><y>360</y><w>70</w><h>70</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;public&gt;&gt;</panel_attributes><additional_attributes>10;10;10;50</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1410</x><y>410</y><w>310</w><h>240</h></coordinates><panel_attributes>trans_job_resp_out
--
-m_sent_data : trans_sent_data_out
--
+trans_job_resp_out()
+trans_job_resp_out(job_id : job_id_type,
                                  code : status_code,
                                  msg : const string &amp;)
//+~trans_job_resp_out() {virtual}/
+begin_sent_data_arr() : void
+end_sent_data_arr() : void
+set_status(code : status_code,
                    msg : const string &amp;) : void
+set_job_id(job_id : job_id_type) : void
+get_sent_data_writer() : trans_sent_data_out &amp;
--
Responsibilities
-- The outgoing translation job response</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>220</x><y>940</y><w>520</w><h>150</h></coordinates><panel_attributes>outgoing_msg
--
-m_writer : JSONWriter
#m_string_buf : StringBuffer
--
+outgoing_msg(type : msg_type)
/+~outgoing_msg( ) {virtual}/
+serialize() : string
--
Responsibilities
-- Is a base class for all outgoing messages</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>830</x><y>940</y><w>430</w><h>180</h></coordinates><panel_attributes>incoming_msg
--
#m_json : Document
--
+incoming_msg()
/+~incoming_msg( ) {virtual}/
+de_serialize(data : const string &amp;) : void
+get_msg_type() : msg_type
+get_json() : const Document &amp;
#verify_protocol_version() : void
--
Responsibilities
-- Is a base class for all incoming messages</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>360</x><y>565</y><w>110</w><h>400</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;public&gt;&gt;</panel_attributes><additional_attributes>90;375;90;320;10;320;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>490</x><y>565</y><w>340</w><h>400</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;public&gt;&gt;</panel_attributes><additional_attributes>10;375;10;240;320;240;320;10</additional_attributes></element><element><id>Relation</id><coordinates><x>540</x><y>560</y><w>720</w><h>400</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;public&gt;&gt;</panel_attributes><additional_attributes>10;380;10;290;700;290;700;10</additional_attributes></element><element><id>Relation</id><coordinates><x>600</x><y>640</y><w>1080</w><h>410</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;public&gt;&gt;</panel_attributes><additional_attributes>10;300;10;230;690;230;690;390;1060;390;1060;10</additional_attributes></element><element><id>Relation</id><coordinates><x>290</x><y>710</y><w>670</w><h>250</h></coordinates><panel_attributes>lt=&lt;-
m1=1</panel_attributes><additional_attributes>640;230;640;120;10;120;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>780</x><y>760</y><w>290</w><h>200</h></coordinates><panel_attributes>lt=&lt;-
m1=1</panel_attributes><additional_attributes>260;180;260;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1140</x><y>730</y><w>40</w><h>230</h></coordinates><panel_attributes>lt=&lt;-
m1=1</panel_attributes><additional_attributes>10;210;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1250</x><y>920</y><w>270</w><h>200</h></coordinates><panel_attributes>lt=&lt;-
m1=1</panel_attributes><additional_attributes>10;170;250;170;250;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1760</x><y>592</y><w>370</w><h>180</h></coordinates><panel_attributes>trans_sent_data
--
typedef vector&lt;int64_t&gt; loads_array
+TRANS_TEXT_FIELD_NAME : static const char * = "trans_text"
+STACK_LOAD_FIELD_NAME : static const char * = "stack_load"
# m_data_obj : json::object_t &amp;
--
+trans_sent_data()
/+~trans_sent_data() {virtual}/
--
Responsibilities
-- Stores the translation data for a sentence</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1710</x><y>452</y><w>550</w><h>420</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;uses&gt;&gt;</panel_attributes><additional_attributes>490;400;490;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1460</x><y>110</y><w>480</w><h>500</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;public&gt;&gt;</panel_attributes><additional_attributes>10;20;460;20;460;480</additional_attributes></element><element><id>Relation</id><coordinates><x>1590</x><y>920</y><w>160</w><h>200</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;uses&gt;&gt;</panel_attributes><additional_attributes>140;150;140;180;10;180;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1670</x><y>854</y><w>290</w><h>210</h></coordinates><panel_attributes>trans_sent_data_in
--
-m_data_obj : const Value * 
--
+trans_sent_data_in()
/+~trans_sent_data_in() {virtual}/
+get_status_code() : status_code
+get_status_msg() : const string &amp;
+get_trans_text() : const string &amp;
+get_stack_load() : const Value &amp;
+has_stack_load() : bool {const}
+set_sent_data( data_obj : const Value &amp;) : void
--
Responsibilities
-- Represents the translated sentence data</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>2000</x><y>854</y><w>320</w><h>230</h></coordinates><panel_attributes>trans_sent_data_out
--
m_writer : JSONWriter &amp; 
--
+trans_sent_data_in(writer : JSONWriter)
/+~trans_sent_data_in() {virtual}/
+begin_sent_data_ent() : void
+end_sent_data_ent() : void
+set_status( code : status_code &amp;, msg : string &amp; ) : void
+set_trans_text( text : const string &amp;) : void
+start_loads_arr() : void
+end_loads_arr() : void
+set_stack_load(const float load) : void
--
Responsibilities
-- Represents the translated sentence data</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1810</x><y>764</y><w>70</w><h>110</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;public&gt;&gt;</panel_attributes><additional_attributes>10;10;10;90</additional_attributes></element><element><id>Relation</id><coordinates><x>2070</x><y>764</y><w>70</w><h>110</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;public&gt;&gt;</panel_attributes><additional_attributes>10;10;10;90</additional_attributes></element><element><id>Relation</id><coordinates><x>1000</x><y>1060</y><w>850</w><h>130</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;uses&gt;&gt;</panel_attributes><additional_attributes>10;60;10;110;830;110;830;10</additional_attributes></element><element><id>Relation</id><coordinates><x>470</x><y>1080</y><w>1760</w><h>150</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;uses&gt;&gt;</panel_attributes><additional_attributes>10;10;10;130;1740;130;1740;10</additional_attributes></element><element><id>Relation</id><coordinates><x>770</x><y>1110</y><w>150</w><h>160</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;public&gt;&gt;</panel_attributes><additional_attributes>10;140;10;70;130;70;130;10</additional_attributes></element></diagram>